Below is some tokenized faulty code. Locate the error, and correct it.
### Tokenized:
Here is the faulty code which has been tokenized:

begin_expr_stmt
operator|*
name|cache
name|flush
name|is
operator|not
name|required
name|here
operator|*
operator|/
name|ret
operator|=
name|sdmmc_wait_ready
argument_list|(
name|card
argument_list|)
expr_stmt|;
end_expr_stmt
begin_default
default|default:
end_default
begin_expr_stmt
name|ret
operator|=
operator|-
name|ENOTSUP
expr_stmt|;
end_expr_stmt
unit|}

### Error location:

I have identified the issue in the tokenized code. I have placed a <START_ERROR> before the problematic tokens and a <END_ERROR> after the problematic tokens.

begin_expr_stmt
operator|*
name|cache
name|flush
name|is
operator|not
name|required
name|here
operator|*
operator|/
name|ret
operator|=
name|sdmmc_wait_ready
argument_list|(
name|card
argument_list|)
expr_stmt|;
end_expr_stmt
<START_ERROR>
begin_default
default|default:
end_default
begin_expr_stmt
name|ret
operator|=
operator|-
name|ENOTSUP
<END_ERROR>
expr_stmt|;
end_expr_stmt
unit|}

### Error correction:

Here is the tokenized code with the issue corrected:

begin_expr_stmt
operator|*
name|cache
name|flush
name|is
operator|not
name|required
name|here
operator|*
operator|/
name|ret
operator|=
name|sdmmc_wait_ready
argument_list|(
name|card
argument_list|)
expr_stmt|;
end_expr_stmt
begin_if_stmt
if|if
condition|(
name|ret
operator|<
literal|0
condition|)
block|{
name|LOG_ERR
argument_list|(
literal|"SDMMC
argument_list|,
name|ret
argument_list|)
expr_stmt|;
name|ret
operator|=
operator|-
name|ENOTSUP
expr_stmt|;
block|}
end_if_stmt
unit|}