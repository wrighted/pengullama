Original commit: https://github.com/zephyrproject-rtos/zephyr/commit/0cf89bb8b41aeb039ea373efc0766eeb64cccc3f
### Tokenized:
Here is the faulty code which has been tokenized:

begin_expr_stmt
operator|*
name|work
name|in
name|the
name|ISR
operator|,
name|so
name|just
name|post
name|the
name|event
operator|.
modifier|*
operator|/
end_expr_stmt
begin_ifdef
ifdef|#
directive|ifdef
name|CONFIG_SPI_ASYNC
end_ifdef
begin_if_stmt
if|if
condition|(
name|ctx
operator|->
name|asynchronous
condition|)
block|{
name|xlnx_quadspi_read_fifo
argument_list|(
name|dev
argument_list|)
expr_stmt|;
name|xlnx_quadspi_start_tx
argument_list|(
name|dev
argument_list|)
expr_stmt|;
end_if_stmt

### Error location:
I have identified the issue in the tokenized code. I have placed a <START_ERROR> before the problematic tokens and a <END_ERROR> after the problematic tokens:

begin_expr_stmt
operator|*
name|work
name|in
name|the
name|ISR
operator|,
name|so
name|just
name|post
name|the
name|event
operator|.
modifier|*
operator|/
<START_ERROR>
end_expr_stmt
begin_ifdef
ifdef|#
directive|ifdef
name|CONFIG_SPI_ASYNC
end_ifdef
<END_ERROR>
begin_if_stmt
if|if
condition|(
name|ctx
operator|->
name|asynchronous
condition|)
block|{
name|xlnx_quadspi_read_fifo
argument_list|(
name|dev
argument_list|)
expr_stmt|;
name|xlnx_quadspi_start_tx
argument_list|(
name|dev
argument_list|)
expr_stmt|;
end_if_stmt

### Error correction:
Here is the tokenized code with the issue corrected:

begin_expr_stmt
operator|*
name|work
name|in
name|the
name|ISR
operator|,
name|so
name|just
name|post
name|the
name|event
operator|.
modifier|*
operator|/
ifdef|#
directive|ifdef
name|CONFIG_SPI_ASYNC
expr|struct
name|spi_context
operator|*
name|ctx
operator|=
operator|&
name|data
operator|->
name|ctx
expr_stmt|;
end_expr_stmt
begin_if_stmt
if|if
condition|(
name|ctx
operator|->
name|asynchronous
condition|)
block|{
name|xlnx_quadspi_read_fifo
argument_list|(
name|dev
argument_list|)
expr_stmt|;
name|xlnx_quadspi_start_tx
argument_list|(
name|dev
argument_list|)
expr_stmt|;
end_if_stmt
