F,FFF,F,F
CO
Fixed irrelevant formatting.

Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.
### Instruction:
I am having trouble with the following code in relation to drivers: tmag5273: fix documentation of tmag5273_check_device_status. Whats wrong? Please fix this issue.

### Input:
Here is the faulty code:

/**
 * @brief checks for DIAG_FAIL errors and reads out the DEVICE_STATUS register if necessary
 *
* Prints a human readable representation to the log, if \c CONFIG_LOG is activated.
*
* @param drv_cfg[in] driver instance configuration
* @param device_status[out] DEVICE_STATUS register if DIAG_FAIL is set
 *
 * @retval 0 on success
* @retval "!= 0" on error (see @ref i2c_reg_read_byte for error codes)
 *
 * @note
* If tmag5273_config.ignore_diag_fail is se
*   -  \a device_status will be always set to \c 0,
 *   - the function always returns \c 0.
 */
static int tmag5273_check_device_status(const struct tmag5273_config *drv_cfg,

### Response:
I have corrected the code to make it more readable and easier to understand. Here is the corrected code:

/**
* @brief checks for DIAG_FAIL errors and reads out the DEVICE_STATUS register if necessary
*
* Prints a human readable representation to the log, if \c CONFIG_LOG is activated.
*
* @param drv_cfg[in] driver instance configuration
* @param device_status[out] DEVICE_STATUS register if DIAG_FAIL is set
*
* @retval 0 on success
* @retval "!= 0" on error (see @ref i2c_reg_read_byte for error codes)
*
* @note
* If tmag5273_config.ignore_diag_fail is set
*   - \a device_status will be always set to \c 0,
*   - the function always returns \c 0.
*/
static int tmag5273_check_device_status(const struct tmag5273_config *drv_cfg, uint8_t *device_status)
{
    int ret;

    /* Check for DIAG_FAIL */
    if (drv_cfg->ignore_diag_fail) {
        *device_status = 0;
        return 0;
    }

    ret = tmag5273_reg_read_byte(drv_cfg, TMAG5273_REG_DEVICE_STATUS, device_status);
    if (ret!= 0) {
        return ret;
    }

    return 0;
}