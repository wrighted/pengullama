Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.
### Instruction:
I am having trouble with the following code in relation to Bluetooth: iso: make TX path service all connections. Whats wrong? Please fix this issue.

### Input:
Here is the faulty code:


	if (!frag) {
		LOG_DBG("signaled ready but no frag available");
		return NULL;
	}

		LOG_DBG("channel has been disconnected");
		__ASSERT_NO_MSG(b == frag);

		return NULL;
	}


### Response:
I corrected the issue in the code you provided:


	if (!frag) {
		LOG_DBG("signaled ready but no frag available");
		return NULL;
	}

		LOG_DBG("channel has been disconnected");
		__ASSERT_NO_MSG(b == frag);

		return NULL;
	}

The issue was with: Bluetooth: iso: make TX path service all connections

ISO connections that were in the TX queue were not getting serviced in
time. This happens because `iso_data_pull()` returns `NULL` when that
particular connection (`conn`) is done sending.

But it doesn't trigger the TX processor again to process other channels in
the queue. This patch fixes that by calling `bt_tx_irq_raise()`.

We can't do this from `conn.c` as we don't know if the `NULL` returned is
because the current channel is out of data or because it has data but it
can't send it (e.g. the current buf is being "viewed" already).

Fixes https://github.com/zephyrproject-rtos/zephyr/issues/74321. Here is the corrected version:


	if (!frag) {
		LOG_DBG("signaled ready but no frag available");
		/* Service other connections */
		bt_tx_irq_raise();

		return NULL;
	}

		LOG_DBG("channel has been disconnected");
		__ASSERT_NO_MSG(b == frag);

		/* Service other connections */
		bt_tx_irq_raise();

		return NULL;
	}
