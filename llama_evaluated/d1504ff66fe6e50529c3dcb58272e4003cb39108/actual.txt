Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.
### Instruction:
I am having trouble with the following code in relation to mcumgr: fix few mismatched CONTAINER_OF. Whats wrong? Please fix this issue.

### Input:
Here is the faulty code:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
}

### Response:
The issue is that the code is trying to use CONTAINER_OF, but it's not clear what the container is. The code needs to specify the container type, like this:


	if (ret!= 0) {
#ifdef CONFIG_MCUMGR_SMP_SUPPORT_ORIGINAL_PROTOCOL
		struct cbor_nb_writer *container = CONTAINER_OF(zse, struct cbor_nb_writer, zs);

		container->error_group = group;
		container->error_ret = ret;
	}
} else {
	/*... */
