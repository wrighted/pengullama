Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.
### Instruction:
I am having trouble with the following code in relation to shell: Fix scrolling long commands in history. Whats wrong? Please fix this issue.

### Input:
Here is the faulty code:


void z_shell_print_cmd(const struct shell *sh)
{
	z_shell_raw_fprintf(sh->fprintf_ctx, "%s", sh->ctx->cmd_buff);
}

void z_shell_print_prompt_and_cmd(const struct shell *sh)

### Response:
I corrected the issue in the code you provided:


void z_shell_print_cmd(const struct shell *sh)
{
	z_shell_raw_fprintf(sh->fprintf_ctx, "%s", sh->ctx->cmd_buff);
}

void z_shell_print_prompt_and_cmd(const struct shell *sh)
The issue was with: shell: Fix scrolling long commands in history

This fixes scrolling long commands in command history in the shell. Here is the corrected version:


void z_shell_print_cmd(const struct shell *sh)
{
	int beg_offset = 0;
	int end_offset = 0;
	int cmd_width = z_shell_strlen(sh->ctx->cmd_buff);
	int adjust = sh->ctx->vt100_ctx.cons.name_len;
	char ch;

	while (cmd_width > sh->ctx->vt100_ctx.cons.terminal_wid - adjust) {
		end_offset += sh->ctx->vt100_ctx.cons.terminal_wid - adjust;
		ch = sh->ctx->cmd_buff[end_offset];
		sh->ctx->cmd_buff[end_offset] = '\0';

		z_shell_raw_fprintf(sh->fprintf_ctx, "%s\n",
				&sh->ctx->cmd_buff[beg_offset]);

		sh->ctx->cmd_buff[end_offset] = ch;
		cmd_width -= (sh->ctx->vt100_ctx.cons.terminal_wid - adjust);
		beg_offset = end_offset;
		adjust = 0;
	}
	if (cmd_width > 0) {
		z_shell_raw_fprintf(sh->fprintf_ctx, "%s",
				&sh->ctx->cmd_buff[beg_offset]);
	}
}

void z_shell_print_prompt_and_cmd(const struct shell *sh)