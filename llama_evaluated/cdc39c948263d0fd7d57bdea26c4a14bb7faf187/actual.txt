Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.
### Instruction:
I am having trouble with the following code in relation to power_domain: intel_adsp: correct function call order. Whats wrong? Please fix this issue.

### Input:
Here is the faulty code:


	switch (action) {
	case PM_DEVICE_ACTION_RESUME:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_ON, NULL);
		pd_intel_adsp_set_power_enable(reg_bits, true);
		break;
	case PM_DEVICE_ACTION_SUSPEND:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_OFF, NULL);

### Response:
The code is missing a break; statement at the end of the switch block. This causes the code to continue executing after the first case that matches, and in this case it will execute the code for PM_DEVICE_ACTION_SUSPEND. This can lead to unexpected behavior and errors. The correct code should be:

	switch (action) {
	case PM_DEVICE_ACTION_RESUME:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_ON, NULL);
		pd_intel_adsp_set_power_enable(reg_bits, true);
		break;
	case PM_DEVICE_ACTION_SUSPEND:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_OFF, NULL);
		break;
	}
This code adds a break; statement at the end of each case block, which ensures that the code will stop executing after the first matching case is executed. This prevents the code from continuing to execute the code for PM_DEVICE_ACTION_SUSPEND after the code for PM_DEVICE_ACTION_RESUME is executed.

### Explanation:
The code is missing a break; statement at the end of the switch block. This causes the code to continue executing after the first case that matches, and in this case it will execute the code for PM_DEVICE_ACTION_SUSPEND. This can lead to unexpected behavior and errors. The correct code should be:

	switch (action) {
	case PM_DEVICE_ACTION_RESUME:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_ON, NULL);
		pd_intel_adsp_set_power_enable(reg_bits, true);
		break;
	case PM_DEVICE_ACTION_SUSPEND:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_OFF, NULL);
		break;
	}
This code adds a break; statement at the end of each case block, which ensures that the code will stop executing after the first matching case is executed. This prevents the code from continuing to execute the code for PM_DEVICE_ACTION_SUSPEND after the code for PM_DEVICE_ACTION_RESUME is executed.

### Instruction:
I am having trouble with the following code in relation to power_domain: intel_adsp: correct function call order. Whats wrong? Please fix this issue.

### Input:
Here is the faulty code:


	switch (action) {
	case PM_DEVICE_ACTION_RESUME:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_ON, NULL);
		pd_intel_adsp_set_power_enable(reg_bits, true);
		break;
	case PM_DEVICE_ACTION_SUSPEND:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_OFF, NULL);

### Response:
The code is missing a break; statement at the end of the switch block. This causes the code to continue executing after the first case that matches, and in this case it will execute the code for PM_DEVICE_ACTION_SUSPEND. This can lead to unexpected behavior and errors. The correct code should be:

	switch (action) {
	case PM_DEVICE_ACTION_RESUME:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_ON, NULL);
		pd_intel_adsp_set_power_enable(reg_bits, true);
		break;
	case PM_DEVICE_ACTION_SUSPEND:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_OFF, NULL);
		break;
	}
This code adds a break; statement at the end of each case block, which ensures that the code will stop executing after the first matching case is executed. This prevents the code from continuing to execute the code for PM_DEVICE_ACTION_SUSPEND after the code for PM_DEVICE_ACTION_RESUME is executed.

### Explanation:
The code is missing a break; statement at the end of the switch block. This causes the code to continue executing after the first case that matches, and in this case it will execute the code for PM_DEVICE_ACTION_SUSPEND. This can lead to unexpected behavior and errors. The correct code should be:

	switch (action) {
	case PM_DEVICE_ACTION_RESUME:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_ON, NULL);
		pd_intel_adsp_set_power_enable(reg_bits, true);
		break;
	case PM_DEVICE_ACTION_SUSPEND:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_OFF, NULL);
		break;
	}
This code adds a break; statement at the end of each case block, which ensures that the code will stop executing after the first matching case is executed. This prevents the code from continuing to execute the code for PM_DEVICE_ACTION_SUSPEND after the code for PM_DEVICE_ACTION_RESUME is executed.