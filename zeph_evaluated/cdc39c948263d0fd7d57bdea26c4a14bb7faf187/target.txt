Original commit: https://github.com/zephyrproject-rtos/zephyr/commit/cdc39c948263d0fd7d57bdea26c4a14bb7faf187

### Instruction:
I am having trouble with the following code in relation to power_domain: intel_adsp: correct function call order. Whats wrong? Please fix this issue.

### Input:
Here is the faulty code:


	switch (action) {
	case PM_DEVICE_ACTION_RESUME:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_ON, NULL);
		pd_intel_adsp_set_power_enable(reg_bits, true);
		break;
	case PM_DEVICE_ACTION_SUSPEND:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_OFF, NULL);

### Tokenized:
Here is the faulty code which has been tokenized:

begin_switch
switch|switch
condition|(
name|action
condition|)
block|{
case|case
name|PM_DEVICE_ACTION_RESUME
case|:
name|pm_device_children_action_run
argument_list|(
name|dev
argument_list|,
name|PM_DEVICE_ACTION_TURN_ON
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|pd_intel_adsp_set_power_enable
argument_list|(
name|reg_bits
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_DEVICE_ACTION_SUSPEND
case|:
name|pm_device_children_action_run
argument_list|(
name|dev
argument_list|,
name|PM_DEVICE_ACTION_TURN_OFF
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
end_switch

### Error location:
I have identified the issue in the tokenized code. I have placed a <START_ERROR> before the problematic tokens and a <END_ERROR> after the problematic tokens:

begin_switch
switch|switch
condition|(
name|action
condition|)
block|{
case|case
name|PM_DEVICE_ACTION_RESUME
case|:
<START_ERROR>
name|pm_device_children_action_run
argument_list|(
name|dev
argument_list|,
name|PM_DEVICE_ACTION_TURN_ON
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|pd_intel_adsp_set_power_enable
argument_list|(
name|reg_bits
argument_list|,
literal|true
<END_ERROR>
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_DEVICE_ACTION_SUSPEND
case|:
name|pm_device_children_action_run
argument_list|(
name|dev
argument_list|,
name|PM_DEVICE_ACTION_TURN_OFF
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
end_switch

### Error correction:
Here is the tokenized code with the issue corrected:

begin_switch
switch|switch
condition|(
name|action
condition|)
block|{
case|case
name|PM_DEVICE_ACTION_RESUME
case|:
name|pd_intel_adsp_set_power_enable
argument_list|(
name|reg_bits
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|pm_device_children_action_run
argument_list|(
name|dev
argument_list|,
name|PM_DEVICE_ACTION_TURN_ON
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_DEVICE_ACTION_SUSPEND
case|:
name|pm_device_children_action_run
argument_list|(
name|dev
argument_list|,
name|PM_DEVICE_ACTION_TURN_OFF
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
end_switch

### Response:
I corrected the issue in the code you provided:


	switch (action) {
	case PM_DEVICE_ACTION_RESUME:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_ON, NULL);
		pd_intel_adsp_set_power_enable(reg_bits, true);
		break;
	case PM_DEVICE_ACTION_SUSPEND:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_OFF, NULL);
The issue was with: power_domain: intel_adsp: correct function call order

Changing function call order. We need to first power-up the power domain
before we turn on the devices.. Here is the corrected version:


	switch (action) {
	case PM_DEVICE_ACTION_RESUME:
		pd_intel_adsp_set_power_enable(reg_bits, true);
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_ON, NULL);
		break;
	case PM_DEVICE_ACTION_SUSPEND:
		pm_device_children_action_run(dev, PM_DEVICE_ACTION_TURN_OFF, NULL);