Original commit: https://github.com/zephyrproject-rtos/zephyr/commit/6f64f77557967a41ef7df429f0a831787bb8418f

### Instruction:
I am having trouble with the following code in relation to Bluetooth: Controller: Remove incorrect check of RFU bit. Whats wrong? Please fix this issue.

### Input:
Here is the faulty code:


	h = (void *)p->ext_hdr_adv_data;

	/* Regard PDU as invalid if a RFU field is set, we do not know the
	 * size of this future field, hence will cause incorrect calculation of
	 * offset to ACAD field.
	 */
	if (h->rfu) {
		goto ull_scan_aux_rx_flush;
	}

	ptr = h->data;


### Tokenized:
Here is the faulty code which has been tokenized:

begin_expr_stmt
name|h
operator|=
operator|(
name|void
operator|*
operator|)
name|p
operator|->
name|ext_hdr_adv_data
expr_stmt|;
end_expr_stmt
begin_comment
comment|/*
end_comment
begin_if_stmt
if|if
condition|(
name|h
operator|->
name|rfu
condition|)
block|{
goto|goto
name|ull_scan_aux_rx_flush
goto|;
block|}
end_if_stmt
begin_expr_stmt
name|ptr
operator|=
name|h
operator|->
name|data
expr_stmt|;
end_expr_stmt

### Error location:
I have identified the issue in the tokenized code. I have placed a <START_ERROR> before the problematic tokens and a <END_ERROR> after the problematic tokens:

begin_expr_stmt
name|h
operator|=
operator|(
name|void
operator|*
operator|)
name|p
operator|->
name|ext_hdr_adv_data
expr_stmt|;
end_expr_stmt
begin_comment
comment|/*
end_comment
<START_ERROR>
begin_if_stmt
if|if
condition|(
name|h
operator|->
name|rfu
condition|)
block|{
goto|goto
name|ull_scan_aux_rx_flush
goto|;
block|}
end_if_stmt
<END_ERROR>
begin_expr_stmt
name|ptr
operator|=
name|h
operator|->
name|data
expr_stmt|;
end_expr_stmt

### Error correction:
Here is the tokenized code with the issue corrected:

begin_expr_stmt
name|h
operator|=
operator|(
name|void
operator|*
operator|)
name|p
operator|->
name|ext_hdr_adv_data
expr_stmt|;
end_expr_stmt
begin_comment
comment|/*
end_comment
begin_expr_stmt
name|ptr
operator|=
name|h
operator|->
name|data
expr_stmt|;
end_expr_stmt

### Response:
I corrected the issue in the code you provided:


	h = (void *)p->ext_hdr_adv_data;

	/* Regard PDU as invalid if a RFU field is set, we do not know the
	 * size of this future field, hence will cause incorrect calculation of
	 * offset to ACAD field.
	 */
	if (h->rfu) {
		goto ull_scan_aux_rx_flush;
	}

	ptr = h->data;

The issue was with: Bluetooth: Controller: Remove incorrect check of RFU bit

RFU bits has to be ignored according to the spec; In addition,
some MediaTek devices seems to have it set (by mistake I assume),
so having the check means we cannot sync to these devices. Here is the corrected version:


	h = (void *)p->ext_hdr_adv_data;

	/* Note: The extended header contains a RFU flag that could potentially cause incorrect
	 * calculation of offset to ACAD field if it gets used to add a new header field; However,
	 * from discussion in BT errata ES-8080 it seems clear that BT SIG is aware that the RFU
	 * bit can not be used to add a new field since existing implementations will not be able
	 * to calculate the start of ACAD in that case
	 */

	ptr = h->data;
