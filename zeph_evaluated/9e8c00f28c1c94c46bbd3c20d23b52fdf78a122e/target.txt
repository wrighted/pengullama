Original commit: https://github.com/zephyrproject-rtos/zephyr/commit/9e8c00f28c1c94c46bbd3c20d23b52fdf78a122e

### Instruction:
I am having trouble with the following code in relation to drivers: stm32-rtc: return -ENODATA when RTC is uninitialized. Whats wrong? Please fix this issue.

### Input:
Here is the faulty code:

		return err;
	}

	do {
		/* read date, time and subseconds and relaunch if a day increment occurred
		 * while doing so as it will result in an erroneous result otherwise

### Tokenized:
Here is the faulty code which has been tokenized:

begin_return
return|return
name|err
return|;
end_return
begin_block
unit|}
block|{
end_block
begin_comment
comment|/*
end_comment

### Error location:
I have identified the issue in the tokenized code. I have placed a <START_ERROR> before the problematic tokens and a <END_ERROR> after the problematic tokens:

begin_return
return|return
name|err
return|;
end_return
<START_ERROR>
begin_block
unit|}
block|{
end_block
<END_ERROR>
begin_comment
comment|/*
end_comment

### Error correction:
Here is the tokenized code with the issue corrected:

begin_return
return|return
name|err
return|;
end_return
begin_expr_stmt
unit|}
operator|(
operator|!
name|LL_RTC_IsActiveFlag_INITS
argument_list|(
name|RTC
argument_list|)
operator|)
block|{
comment|/*
name|k_mutex_unlock
argument_list|(
operator|&
name|data
operator|->
name|lock
argument_list|)
block|;
return|return
operator|-
name|ENODATA
return|;
block|}
end_expr_stmt
begin_do
do|do
block|{
end_do
begin_comment
comment|/*
end_comment

### Response:
I corrected the issue in the code you provided:

		return err;
	}

	do {
		/* read date, time and subseconds and relaunch if a day increment occurred
		 * while doing so as it will result in an erroneous result otherwise
The issue was with: drivers: stm32-rtc: return -ENODATA when RTC is uninitialized

rtc_get_time() on STM32 does not implement the -ENODATA return code.
This prevents testing the initialisation status of the RTC.

Fixed by reading INITS flag and adding a error path in
rtc_stm32_get_time().. Here is the corrected version:

		return err;
	}

	if (!LL_RTC_IsActiveFlag_INITS(RTC)) {
		/* INITS flag is set when the calendar has been initialiazed. This flag is
		 * reset only on backup domain reset, so it can be read after a system
		 * reset to check if the calendar has been initialized.
		 */
		k_mutex_unlock(&data->lock);
		return -ENODATA;
	}

	do {
		/* read date, time and subseconds and relaunch if a day increment occurred
		 * while doing so as it will result in an erroneous result otherwise