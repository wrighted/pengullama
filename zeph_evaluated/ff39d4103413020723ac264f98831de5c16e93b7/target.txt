Original commit: https://github.com/zephyrproject-rtos/zephyr/commit/ff39d4103413020723ac264f98831de5c16e93b7

### Instruction:
I am having trouble with the following code in relation to Bluetooth: ssp: correct pairing failed callback. Whats wrong? Please fix this issue.

### Input:
Here is the faulty code:


		SYS_SLIST_FOR_EACH_CONTAINER_SAFE(&bt_auth_info_cbs, listener,
						  next, node) {
			if (listener->pairing_complete) {
				listener->pairing_complete(conn, status);
			}
		}
	}

### Tokenized:
Here is the faulty code which has been tokenized:

begin_macro
name|SYS_SLIST_FOR_EACH_CONTAINER_SAFE
argument_list|(
argument|&bt_auth_info_cbs
argument_list|,
argument|listener
argument_list|,
argument|next
argument_list|,
argument|node
argument_list|)
end_macro
begin_block
block|{
if|if
condition|(
name|listener
operator|->
name|pairing_complete
condition|)
block|{
name|listener
operator|->
name|pairing_complete
argument_list|(
name|conn
argument_list|,
name|status
argument_list|)
expr_stmt|;
block|}
block|}
end_block
unit|}

### Error location:
I have identified the issue in the tokenized code. I have placed a <START_ERROR> before the problematic tokens and a <END_ERROR> after the problematic tokens:

begin_macro
name|SYS_SLIST_FOR_EACH_CONTAINER_SAFE
argument_list|(
argument|&bt_auth_info_cbs
argument_list|,
argument|listener
argument_list|,
argument|next
argument_list|,
argument|node
argument_list|)
end_macro
begin_block
block|{
if|if
condition|(
name|listener
operator|->
<START_ERROR>
name|pairing_complete
condition|)
block|{
name|listener
operator|->
name|pairing_complete
<END_ERROR>
argument_list|(
name|conn
argument_list|,
name|status
argument_list|)
expr_stmt|;
block|}
block|}
end_block
unit|}

### Error correction:
Here is the tokenized code with the issue corrected:

begin_macro
name|SYS_SLIST_FOR_EACH_CONTAINER_SAFE
argument_list|(
argument|&bt_auth_info_cbs
argument_list|,
argument|listener
argument_list|,
argument|next
argument_list|,
argument|node
argument_list|)
end_macro
begin_block
block|{
if|if
condition|(
name|listener
operator|->
name|pairing_failed
condition|)
block|{
name|listener
operator|->
name|pairing_failed
argument_list|(
name|conn
argument_list|,
name|status
argument_list|)
expr_stmt|;
block|}
block|}
end_block
unit|}

### Response:
I corrected the issue in the code you provided:


		SYS_SLIST_FOR_EACH_CONTAINER_SAFE(&bt_auth_info_cbs, listener,
						  next, node) {
			if (listener->pairing_complete) {
				listener->pairing_complete(conn, status);
			}
		}
	}
The issue was with: Bluetooth: ssp: correct pairing failed callback

Current, the callback `pairing_complete` is called
when the pairing is filed. But there is a callback
`pairing_failed` for pairing failed case.

Correct the callback calling if pairing failed.
Call `pairing_failed` instead of `pairing_complete`
if the pairing failed.. Here is the corrected version:


		SYS_SLIST_FOR_EACH_CONTAINER_SAFE(&bt_auth_info_cbs, listener,
						  next, node) {
			if (listener->pairing_failed) {
				listener->pairing_failed(conn, status);
			}
		}
	}